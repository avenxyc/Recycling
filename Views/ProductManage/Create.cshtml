@model Recycling.Models.ProductView

@{
    ViewBag.Title = "Create";

}

<h2>Create</h2>


@using (Html.BeginForm("Create","ProductManage",FormMethod.Post,new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProductView</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UPC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UPC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UPC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParentCompany, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ParentCompany, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ParentCompany, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalWeight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalWeight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalWeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Product Image", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <input type="text" class="form-control" disabled>
                    <span class="input-group-btn">
                        <span class="btn btn-default btn-file ">
                            Browse<input type="file" value="Browse" name="ProductImage">
                        </span>
                    </span>
                </div><!-- /input-group -->
            </div>
        </div>
     
        <div class="form-group">
            @Html.LabelFor(model => model.Region, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Region", new List<SelectListItem> {
                        new SelectListItem { Text = "HRM", Value = "1"},
                        new SelectListItem { Text = "2", Value = "2"},
                        new SelectListItem { Text = "3", Value = "3"},
                        new SelectListItem { Text = "4", Value = "4"},
                        new SelectListItem { Text = "5", Value = "5"},
                        new SelectListItem { Text = "6", Value = "6"},
                        new SelectListItem { Text = "7", Value = "7"}
                    }, "-- Select Region --", htmlAttributes: new { @class = "btn btn-default dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="Constituentlist">
            @Html.LabelFor(model => model.NumberOfConstituent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="dropdown col-md-10">
                @Html.DropDownList("NumberOfConstituent", new List<SelectListItem>
                    {
                        new SelectListItem { Text = "1", Value = "1"},
                        new SelectListItem { Text = "2", Value = "2"},
                        new SelectListItem { Text = "3", Value = "3"},
                        new SelectListItem { Text = "4", Value = "4"},
                        new SelectListItem { Text = "5", Value = "5"},
                        new SelectListItem { Text = "6", Value = "6"},
                        new SelectListItem { Text = "7", Value = "7"}
                    }, "-- Select Number --", htmlAttributes: new { @class = "btn btn-default dropdown-toggle", @id = "cnumber" })
                @Html.ValidationMessageFor(model => model.NumberOfConstituent, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
